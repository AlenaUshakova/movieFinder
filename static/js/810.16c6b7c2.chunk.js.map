{"version":3,"file":"static/js/810.16c6b7c2.chunk.js","mappings":"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","sources":["components/Button/Button.styled.jsx","components/Button/Button.jsx","components/services/api-movie.jsx","components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","pages/MovieDetails/MovieDetails.styled.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoadMore = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 8px 10px;\n  margin: 0 auto;\n  border-radius: 5px;\n  background-color: orangered;\n  text-align: center;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 16px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  box-shadow: 0px 2px 24px -5px rgba(0, 0, 0, 0.3);\n\n  transition: box-shadow 250ms linear, scale 250ms linear;\n\n  :hover,\n  :focus {\n    scale: 1.1;\n    box-shadow: 0px 2px 24px -5px rgba(0, 0, 0, 0.74);\n  }\n`;\n","import { LoadMore } from './Button.styled';\n\nexport const Button = ({ onClick, children }) => {\n  return (\n    <LoadMore onClick={onClick} type=\"button\">\n      {children}\n    </LoadMore>\n  );\n};\n\n","import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`;\nconst KEY = 'd9a5502e7ecfc2f8fab8d65f4cbb6057';\n\nexport const genresMovies = async(ln) => {\n  const response = await axios.get(\n    `/genre/movie/list?api_key=${KEY}&language=${ln}`\n  );\n\n  return response.data.genres;\n};\n\nexport const popularMovies = async (page,ln) => {\n  const response = await axios.get(\n    `trending/movie/week?api_key=${KEY}&page=${page}&language=${ln}`\n  );\n\n  return response.data;\n};\n\nexport const movieByQuery = async (query, page,ln) => {\n  const response = await axios.get(\n    `search/movie?api_key=${KEY}&query=${query}&language=${ln}&${page}&include_adult=false`\n  );\n\n  return response.data;\n};\n\nexport const movieById = async (id,ln) => {\n  const response = await axios.get(`movie/${id}?api_key=${KEY}&language=${ln}`);\n\n  return response.data;\n};\n\nexport const movieCast = async (id, ln) => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${KEY}&language=${ln}`\n  );\n  return response.data.cast;\n};\n\nexport const movieReviews = async (id, ln) => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${KEY}&language=${ln}&page=1`\n  );\n  return response.data.results;\n};\n\nexport const getMovieVideo = async (id) => {\n  const response = await axios.get(`movie/${id}/videos?api_key=${KEY}`);\n  return response.data.results;\n};\n\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n  margin-bottom: 20px;\n\n  transition: color linear 250ms;\n\n  :hover {\n    color: orangered;\n  }\n`;\n","import { HiArrowLeft } from 'react-icons/hi';\nimport { StyledLink } from './BackLink.styled';\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const ContainerMovie = styled.div`\n  min-height: 100%;\n  padding-top: 40px;\n  padding-bottom: 40px;\n  padding-left: 20px;\n  padding-right: 20px;\n  position: relative;\n`;\n\nexport const MovieDetText = styled.div`\n  min-width: 280px;\n\n  @media screen and (min-width: 480px) {\n    min-width: 350px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    min-width: 800px;\n  }\n`;\nexport const WrapperMovie = styled.div`\n  font-weight: 500;\n  width: 100%;\n  font-size: smaller;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  h1,\n  h3 {\n    color: orangered;\n  }\n\n  img {\n    display: block;\n    border: 1px solid black;\n    border-radius: 5px;\n    box-shadow: 0px 2px 24px -5px rgba(0, 0, 0, 0.3);\n    height: 500px;\n    max-width: 100%;\n  }\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    gap: 20px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    font-size: medium;\n  }\n`;\n\nexport const MovieList = styled.ul`\n  display: flex;\n  list-style: none;\n  gap: 40px;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const MovieLink = styled(NavLink)`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  width: 80px;\n  height: 40px;\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n  font-size: smaller;\n  border: 1px solid grey;\n  transition: color linear 250ms;\n\n  &.active {\n    color: white;\n    background-color: orangered;\n    border: none;\n    box-shadow: 1px 11px 11px -4px rgba(228, 152, 54, 0.47);\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    color: orangered;\n  }\n`;\n\nexport const MovieInfo = styled.div`\n  height: auto;\n  margin-top: 30px;\n  padding-bottom: 30px;\n  border-bottom: 1px solid black;\n  border-top: 1px solid black;\n`;\n\nexport const MovieInfoTitle = styled.h4`\n  margin-bottom: 30px;\n  color: orangered;\n`;\n\nexport const MovieTrailer = styled.div`\n  margin-top: 20px;\n  display: inline-block;\n`;\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 12;\n`;\n\n\n\nexport const ModalImg = styled.img`\n  width: 100%;\n  height: 560px;\n  object-fit: contain;\n`;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Overlay} from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = ({ closeModal, children}) => {\n  useEffect(() => {\n    const hendleKeyDown = e => {\n      if (e.code === 'Escape') {\n        closeModal();\n      }\n    };\n    window.addEventListener('keydown', hendleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', hendleKeyDown);\n    };\n  }, [closeModal]);\n\n  const hendleClickBackdrop = e => {\n    if (e.currentTarget === e.target) {\n      closeModal();\n    }\n  };\n\n  return createPortal(\n    <Overlay onClick={hendleClickBackdrop}>\n      <div>{children}</div>\n    </Overlay>,\n    modalRoot\n  );\n};\n\n","import { useState, useEffect } from 'react';\nimport { Suspense } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { movieById, getMovieVideo } from '../../components/services/api-movie';\nimport { BackLink } from 'components/BackLink/BackLink';\nimport {\n  WrapperMovie,\n  MovieList,\n  MovieLink,\n  MovieInfo,\n  MovieInfoTitle,\n  ContainerMovie,\n  MovieDetText,\n  MovieTrailer,\n} from './MovieDetails.styled';\nimport noposter from '../../images/NoPoster.jpg';\nimport { Modal } from 'components/Modal/Modal';\nimport ReactPlayer from 'react-player';\nimport { Button } from 'components/Button/Button';\nimport { RxVideo } from 'react-icons/rx';\n\nconst BASE_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst MovieDetails = ({ value }) => {\n  const { id } = useParams();\n  const [showModal, setShowModal] = useState(false);\n  const [movieId, setMovieId] = useState(null);\n  const [movieVideo, setMovieVideo] = useState('');\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    movieById(id, value).then(r => {\n      if (r.overview === '') {\n        movieById(id, 'en').then(setMovieId);\n      }\n      setMovieId(r);\n\n      getMovieVideo(id).then(r => {\n        if (r.length === 0) {\n          setMovieVideo(r);\n          return;\n        }\n        const key = r.find(\n          el =>\n            el.name === 'official trailer' ||\n            el.name === 'Official Trailer' ||\n            el.name.includes('Official') ||\n            el.name[0]\n        );\n        setMovieVideo(key.key);\n      });\n    });\n  }, [id, value]);\n\n  if (!movieId) {\n    return;\n  }\n\n  const {\n    poster_path,\n    original_title,\n    original_name,\n    release_date,\n    first_air_date,\n    vote_average,\n    genres,\n    overview,\n  } = movieId;\n\n  const toggleModal = () => {\n    setShowModal(prevShowModal => !prevShowModal);\n  };\n  return (\n    <ContainerMovie>\n      <BackLink to={backLinkHref}>\n        {value === 'ru' ? 'Назад' : 'Go back'}\n      </BackLink>\n      <WrapperMovie>\n        {poster_path !== null ? (\n          <img src={`${BASE_URL}${poster_path}`} alt=\"\" />\n        ) : (\n          <img src={noposter} alt=\"\" width={334} />\n        )}\n        <MovieDetText>\n          <h1>\n            {original_title || original_name} (\n            {release_date === '' ? (\n              <span>\n                {value === 'ru' ? 'нет информации' : 'no information'}\n              </span>\n            ) : (\n              <span>{parseInt(release_date || first_air_date)}</span>\n            )}\n            )\n          </h1>\n          <p>\n            {value === 'ru' ? 'Рейтинг пользователей: ' : 'User Score:'}\n            {`${Math.round(vote_average * 10)}%`}\n          </p>\n          <h3>{value === 'ru' ? 'Описание ' : 'Overview'}</h3>\n          <p>\n            {overview !== ''\n              ? overview\n              : value === 'ru'\n              ? 'нет информации'\n              : 'no information'}\n          </p>\n          <h3>{value === 'ru' ? 'Жанры' : 'Genres'}</h3>\n          <p>\n            {genres.length <= 0\n              ? value === 'ru'\n                ? 'нет информации'\n                : 'no information'\n              : genres.map((genre, index) => (\n                  <span key={index} style={{ marginRight: '10px' }}>\n                    {\n                      (genre.name =\n                        genre.name[0].toUpperCase() +\n                        genre.name.slice(1, genre.name.length))\n                    }\n                    /\n                  </span>\n                ))}\n          </p>\n          {movieVideo.length > 0 && (\n            <MovieTrailer>\n              <Button onClick={toggleModal}>\n                {' '}\n                <RxVideo size={20} style={{ marginRight: '10px' }} /> Trailer\n              </Button>\n            </MovieTrailer>\n          )}\n        </MovieDetText>\n      </WrapperMovie>\n\n      <MovieInfo>\n        <MovieInfoTitle>\n          {value === 'ru'\n            ? 'Допольнительная информация'\n            : 'Additional Information'}\n        </MovieInfoTitle>\n        <MovieList>\n          <li>\n            <MovieLink to=\"cast\" state={location.state}>\n              {value === 'ru' ? 'Актёрский состав ' : 'Cast'}\n            </MovieLink>\n          </li>\n          <li>\n            <MovieLink to=\"reviews\" state={location.state}>\n              {value === 'ru' ? 'Отзывы' : 'Reviews'}\n            </MovieLink>\n          </li>\n        </MovieList>\n      </MovieInfo>\n      <Suspense fallback={<div>Loading page...</div>}>\n        <Outlet />\n      </Suspense>\n      {showModal && (\n        <Modal closeModal={toggleModal}>\n          <ReactPlayer\n            muted={true}\n            controls={true}\n            width={1000}\n            height={600}\n            url={`https://www.youtube.com/watch?v=${movieVideo}`}\n          />\n        </Modal>\n      )}\n    </ContainerMovie>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["LoadMore","styled","Button","onClick","children","type","axios","KEY","genresMovies","ln","response","data","genres","popularMovies","page","movieByQuery","query","movieById","id","movieCast","cast","movieReviews","results","getMovieVideo","StyledLink","Link","BackLink","to","size","ContainerMovie","MovieDetText","WrapperMovie","MovieList","MovieLink","NavLink","MovieInfo","MovieInfoTitle","MovieTrailer","Overlay","modalRoot","document","querySelector","Modal","closeModal","useEffect","hendleKeyDown","e","code","window","addEventListener","removeEventListener","createPortal","currentTarget","target","value","useParams","useState","showModal","setShowModal","movieId","setMovieId","movieVideo","setMovieVideo","location","useLocation","backLinkHref","state","from","then","r","overview","length","key","find","el","name","includes","poster_path","original_title","original_name","release_date","first_air_date","vote_average","toggleModal","prevShowModal","src","alt","noposter","width","parseInt","Math","round","map","genre","index","style","marginRight","toUpperCase","slice","Suspense","fallback","muted","controls","height","url"],"sourceRoot":""}